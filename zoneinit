#!/usr/bin/env bash

# Copyright 2017, Joyent. Inc.

PATH=/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
export PATH

set -o errexit
set -o xtrace

. /lib/svc/share/smf_include.sh
smf_is_globalzone && exit ${SMF_EXIT_OK}

# Set basedir and default config file
ZONEINIT_DIR=@ZONEINIT_DIR@
ZONEINIT_INCLUDES=$ZONEINIT_DIR/includes
ZONECONFIG=/root/zoneconfig

# This script should only continue if
#
#  1) executed as a SMF start method; and
#  2) /var/svc/provisioning exist.
#
# Otherwise, pretend success but do nothing
#

# Pre-create /var/svc/provisioning if /root/zoneconfig exists
# to stay backwards compatible.
if [[ -e $ZONECONFIG ]]; then
	touch /var/svc/provisioning
fi

# Do nothing if not under SMF, not provisioning, or already done.

if [[ $SMF_METHOD != 'start' || \
   ! -e /var/svc/provisioning || \
   "$(svcprop -p application/done zoneinit)" =~ true ]]; then

	exit ${SMF_EXIT_OK}
fi

function log {
	local WHERE=$(basename "${INC-zoneinit}")
	echo "${WHERE}: $1"
}

function exit_handler {
	local WHERE=$(basename "${INC-zoneinit}")
	local EXITCODE=${2:-95}

	if [ ${EXITCODE} -gt 0 ]; then
		echo "${WHERE}: $1 ${EXITCODE}"

		# Renaming 'provisioning' to 'provision_failure' tells the
		# provisioner that we failed and the machine is no good
		if [[ -e /var/svc/provisioning ]]; then
			mv /var/svc/provision{ing,_failure}
		fi

		# Status 95 tells the SMF restarter to fail fatally (not try
		# again)
		exit "$SMF_EXIT_ERR_FATAL"
	fi
}

trap 'exit_handler "received exit status" $?' EXIT

START_TIME=$(($(date +%s%N) / 1000 / 1000))
log "(start)"

# Pull in and execute all operations from the 'includes' directory
for INC in "$ZONEINIT_INCLUDES"/*.sh; do
	log "(start) $INC"
	thentime=$(($(date +%s%N) / 1000 / 1000))
	source "$INC"
	nowtime=$(($(date +%s%N) / 1000 / 1000))
	ms=$((nowtime - thentime))
	log "(finish) $INC - took ${ms}ms"
done
unset INC

END_TIME=$(($(date +%s%N) / 1000 / 1000))
RUN_TIME=$((END_TIME - START_TIME))
log "total runtime ${RUN_TIME}ms"

# provisioner takes over
log "(finish)"
exit "$SMF_EXIT_OK"
